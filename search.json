[{"path":"https://marekprokop.github.io/keywordr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 keywordr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"used-libraries","dir":"Articles","previous_headings":"Setup and prerequsites","what":"Used libraries","title":"Recomended workflow","text":"keywordr package designed work well tidyverse always iclude libraries.","code":"library(tidyverse) library(keywordr)"},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"input-data","dir":"Articles","previous_headings":"Setup and prerequsites","what":"Input data","title":"Recomended workflow","text":"input data can use either CSV export Marketing Miner called Keyword Suggestions dataframe (tibble) following structure: first two columns required, three (cpc, input source) optional. purposes tutorial, use first method prepare input data first.","code":"#> 'data.frame':    0 obs. of  5 variables: #>  $ query : chr  #>  $ volume: int  #>  $ cpc   : num  #>  $ input : chr  #>  $ source: chr input_data <- tribble(   ~query,             ~volume,   \"seo\",                96000,   \"seo ye-ji\",          22000,   \"seo meaning\",         6700,   \"seo services\",        6400,   \"seo ye ji\",           6000,   \"what is a seo\",       5300,   \"seo london\",          5000,   \"what is seo\",         4800,   \"seo agency\",          4300,   \"joe seo\",             4300,   \"seo company\",         4200,   \"london seo agencies\", 4100,   \"seo consultant\",      3500,   \"seo service\",         3500,   \"seo company london\",  2500,   \"seo agencies london\", 2500,   \"seo agency london\",   2400,   \"seo services london\", 2400,   \"seo consultants\",     2300,   \"local seo\",           2200,   \"local seo services\",  2000 ) print(input_data, n = 25) #> # A tibble: 21 × 2 #>    query               volume #>    <chr>                <dbl> #>  1 seo                  96000 #>  2 seo ye-ji            22000 #>  3 seo meaning           6700 #>  4 seo services          6400 #>  5 seo ye ji             6000 #>  6 what is a seo         5300 #>  7 seo london            5000 #>  8 what is seo           4800 #>  9 seo agency            4300 #> 10 joe seo               4300 #> 11 seo company           4200 #> 12 london seo agencies   4100 #> 13 seo consultant        3500 #> 14 seo service           3500 #> 15 seo company london    2500 #> 16 seo agencies london   2500 #> 17 seo agency london     2400 #> 18 seo services london   2400 #> 19 seo consultants       2300 #> 20 local seo             2200 #> 21 local seo services    2000"},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"a-kwresearch-object","dir":"Articles","previous_headings":"Setup and prerequsites","what":"A kwresearch object","title":"Recomended workflow","text":"data stored object class kwresearch keyword analysis. Therefore, create object, called example kwr, right beginning. function call, can also import input data . English (languages use diacritics), recommend setting accentize FALSE. Now can check data . Note queries ‘seo ye-ji’ ‘seo ye ji’ combined together. Tis result normalization, tries unify queries differ punctuation, accents order words. don’t like result, can switch normalization normalize argument. ready pruning classification now.","code":"kwr <- kwresearch(input_data, accentize = FALSE) kwr |> kwr_queries() #> # A tibble: 19 × 7 #>    query_normalized    n_queries volume   cpc query_original        input source #>    <chr>                   <int>  <dbl> <dbl> <chr>                 <chr> <chr>  #>  1 seo                         1  96000    NA seo                   NA    NA     #>  2 seo ye-ji                   2  28000    NA seo ye ji,seo ye-ji   NA    NA     #>  3 seo meaning                 1   6700    NA seo meaning           NA    NA     #>  4 london seo agencies         2   6600    NA london seo agencies,… NA    NA     #>  5 seo services                1   6400    NA seo services          NA    NA     #>  6 what is a seo               1   5300    NA what is a seo         NA    NA     #>  7 seo london                  1   5000    NA seo london            NA    NA     #>  8 what is seo                 1   4800    NA what is seo           NA    NA     #>  9 joe seo                     1   4300    NA joe seo               NA    NA     #> 10 seo agency                  1   4300    NA seo agency            NA    NA     #> 11 seo company                 1   4200    NA seo company           NA    NA     #> 12 seo consultant              1   3500    NA seo consultant        NA    NA     #> 13 seo service                 1   3500    NA seo service           NA    NA     #> 14 seo company london          1   2500    NA seo company london    NA    NA     #> 15 seo agency london           1   2400    NA seo agency london     NA    NA     #> 16 seo services london         1   2400    NA seo services london   NA    NA     #> 17 seo consultants             1   2300    NA seo consultants       NA    NA     #> 18 local seo                   1   2200    NA local seo             NA    NA     #> 19 local seo services          1   2000    NA local seo services    NA    NA"},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"pruning","dir":"Articles","previous_headings":"","what":"Pruning","title":"Recomended workflow","text":"Pruning process remove irrelevant queries. still remain source data can displayed outputs, bother classification. task find patterns determine irrelevant queries specify patterns regular expressions. queries example, can spot formulas glance. words phrases ‘ye-ji’ ‘joe’. remove queries matching patterns follows: check queries now, find irrelevant ones already missing.","code":"recipe_file <- file.path(tempdir(), \"recipes.yml\")  kwr_add_pattern(\"ye-ji\", recipe_file, recipe_type = \"remove\") kwr_add_pattern(\"joe\", recipe_file, recipe_type = \"remove\")  kwr <- kwr |>    kwr_prune(recipe_file) #> Removing queries... #> Removed 2 queries out of 19. Duration: 0.005s kwr |> kwr_queries() #> # A tibble: 17 × 7 #>    query_normalized    n_queries volume   cpc query_original        input source #>    <chr>                   <int>  <dbl> <dbl> <chr>                 <chr> <chr>  #>  1 seo                         1  96000    NA seo                   NA    NA     #>  2 seo meaning                 1   6700    NA seo meaning           NA    NA     #>  3 london seo agencies         2   6600    NA london seo agencies,… NA    NA     #>  4 seo services                1   6400    NA seo services          NA    NA     #>  5 what is a seo               1   5300    NA what is a seo         NA    NA     #>  6 seo london                  1   5000    NA seo london            NA    NA     #>  7 what is seo                 1   4800    NA what is seo           NA    NA     #>  8 seo agency                  1   4300    NA seo agency            NA    NA     #>  9 seo company                 1   4200    NA seo company           NA    NA     #> 10 seo consultant              1   3500    NA seo consultant        NA    NA     #> 11 seo service                 1   3500    NA seo service           NA    NA     #> 12 seo company london          1   2500    NA seo company london    NA    NA     #> 13 seo agency london           1   2400    NA seo agency london     NA    NA     #> 14 seo services london         1   2400    NA seo services london   NA    NA     #> 15 seo consultants             1   2300    NA seo consultants       NA    NA     #> 16 local seo                   1   2200    NA local seo             NA    NA     #> 17 local seo services          1   2000    NA local seo services    NA    NA"},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"what-exactly-happened","dir":"Articles","previous_headings":"Pruning","what":"What exactly happened","title":"Recomended workflow","text":"Using kwr_add_pattern function, created recipe file called ‘recipes.yml’ temporary directory wrote ‘ye-ji’ ‘joe’ patterns . recipe type remove, means queries matching recipe removed. can read recipes structure ‘Removal classification recipes’ vignette. applied kwr_prune function kwr object, executed recipes type remove recipe file. small data effect method show much, consider data usual size one pattern can capture thus remove possibly hundreds queries.","code":""},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"classification","dir":"Articles","previous_headings":"","what":"Classification","title":"Recomended workflow","text":"next actually main task classify queries. start exploration, supported three functions: kwr_subqueries, kwr_collocations kwr_ngrams.","code":""},{"path":[]},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"n-grams","dir":"Articles","previous_headings":"Classification > Exploration","what":"N-grams","title":"Recomended workflow","text":"kwr_ngrams function returns -called n-grams, .e. single words multi-word phrases contained queries. output sorted number queries n-gram found, however can reorder using arrange function dplyr package search volume.","code":"kwr |> kwr_ngrams() #> # A tibble: 19 × 3 #>    token                   n volume #>    <chr>               <int>  <dbl> #>  1 seo                    17 160100 #>  2 london                  5  18900 #>  3 seo services            3  10800 #>  4 what is                 2  10100 #>  5 seo agency              2   6700 #>  6 seo company             2   6700 #>  7 local seo               2   4200 #>  8 seo meaning             1   6700 #>  9 london seo agencies     1   6600 #> 10 what is a seo           1   5300 #> 11 seo london              1   5000 #> 12 what is seo             1   4800 #> 13 seo consultant          1   3500 #> 14 seo service             1   3500 #> 15 seo company london      1   2500 #> 16 seo agency london       1   2400 #> 17 seo services london     1   2400 #> 18 seo consultants         1   2300 #> 19 local seo services      1   2000"},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"subqueries","dir":"Articles","previous_headings":"Classification > Exploration","what":"Subqueries","title":"Recomended workflow","text":"Subqueries essentially n-grams also exist separate queries. words, queries entirely exactly contained , longer queries.","code":"kwr |> kwr_subqueries() #> # A tibble: 5 × 3 #>   token            n volume #>   <chr>        <int>  <dbl> #> 1 seo             16  64100 #> 2 seo services     2   4400 #> 3 seo company      1   2500 #> 4 seo agency       1   2400 #> 5 local seo        1   2000"},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"collocations","dir":"Articles","previous_headings":"Classification > Exploration","what":"Collocations","title":"Recomended workflow","text":"Collocations least two-word phrases likely occur queries single words make . useful detecting typical multi-word phrases.","code":"kwr |> kwr_collocations() #> # A tibble: 5 × 6 #>   collocation  count count_nested length lambda     z #>   <chr>        <int>        <int>  <dbl>  <dbl> <dbl> #> 1 what is          2            2      2   5.42  2.57 #> 2 local seo        2            1      2   3.33  2.01 #> 3 seo services     3            2      2   2.04  1.30 #> 4 seo agency       2            1      2   1.61  1.00 #> 5 seo company      2            1      2   1.61  1.00"},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"pattern-testing","dir":"Articles","previous_headings":"Classification","what":"Pattern testing","title":"Recomended workflow","text":"discover useful pattern research, ’s good idea test . kwr_test_regex function used purpose. Let’s try pattern ‘agenc’. result get 4 tables: first one contains queries match formula, columns can clearly see matched text queries. second contains list full words phrases match pattern. third contains list unique texts located text matches pattern. Finally, fourth contains n-grams constructed texts third table.","code":"pattern <- \"agenc\" kwr_test_regex(kwr, pattern) #> $full #> # A tibble: 3 × 5 #>   query_normalized    pred       word     succ     match #>   <chr>               <chr>      <chr>    <chr>    <chr> #> 1 london seo agencies london seo agencies \"\"       agenc #> 2 seo agency          seo        agency   \"\"       agenc #> 3 seo agency london   seo        agency   \"london\" agenc #>  #> $words #> # A tibble: 2 × 2 #>   word         n #>   <chr>    <int> #> 1 agency       2 #> 2 agencies     1 #>  #> $around #> # A tibble: 3 × 2 #>   around         n #>   <chr>      <int> #> 1 seo            2 #> 2 london         1 #> 3 london seo     1 #>  #> $around_ngrams #> # A tibble: 3 × 2 #>   token          n #>   <chr>      <int> #> 1 london         2 #> 2 seo            2 #> 3 london seo     1"},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"recipe-creation-and-the-classification-itself","dir":"Articles","previous_headings":"Classification","what":"Recipe creation and the classification itself","title":"Recomended workflow","text":"tested , create classification recipe pattern, just previously created pruning recipes. call kwr_classify function. look queries now, already classified. just repeat process patterns.","code":"kwr_add_pattern(   pattern = pattern,   recipe_file = recipe_file,   recipe_type = \"label\",   dim_name = \"bussiness_type\",   value = \"agency\" ) kwr <- kwr |>    kwr_classify(recipe_file) #> Label:bussiness_type #>   Value: agency kwr |>    kwr_queries() #> # A tibble: 17 × 8 #>    query_normalized   bussiness_type n_queries volume   cpc query_original input #>    <chr>              <chr>              <int>  <dbl> <dbl> <chr>          <chr> #>  1 seo                NA                     1  96000    NA seo            NA    #>  2 seo meaning        NA                     1   6700    NA seo meaning    NA    #>  3 london seo agenci… agency                 2   6600    NA london seo ag… NA    #>  4 seo services       NA                     1   6400    NA seo services   NA    #>  5 what is a seo      NA                     1   5300    NA what is a seo  NA    #>  6 seo london         NA                     1   5000    NA seo london     NA    #>  7 what is seo        NA                     1   4800    NA what is seo    NA    #>  8 seo agency         agency                 1   4300    NA seo agency     NA    #>  9 seo company        NA                     1   4200    NA seo company    NA    #> 10 seo consultant     NA                     1   3500    NA seo consultant NA    #> 11 seo service        NA                     1   3500    NA seo service    NA    #> 12 seo company london NA                     1   2500    NA seo company l… NA    #> 13 seo agency london  agency                 1   2400    NA seo agency lo… NA    #> 14 seo services lond… NA                     1   2400    NA seo services … NA    #> 15 seo consultants    NA                     1   2300    NA seo consultan… NA    #> 16 local seo          NA                     1   2200    NA local seo      NA    #> 17 local seo services NA                     1   2000    NA local seo ser… NA    #> # … with 1 more variable: source <chr> kwr_add_pattern(\"compan\", recipe_file, \"label\", \"bussiness_type\", \"company\") kwr_add_pattern(\"consult\", recipe_file, \"label\", \"bussiness_type\", \"consultancy\") kwr_add_pattern(\"london\", recipe_file, \"label\", \"place\")  kwr <- kwr |>    kwr_classify(recipe_file) #> Label:bussiness_type #>   Value: agency #>   Value: company #>   Value: consultancy #> Label:place kwr |>    kwr_queries() |>    select(1:5) #> # A tibble: 17 × 5 #>    query_normalized    bussiness_type place  n_queries volume #>    <chr>               <chr>          <chr>      <int>  <dbl> #>  1 seo                 NA             NA             1  96000 #>  2 seo meaning         NA             NA             1   6700 #>  3 london seo agencies agency         london         2   6600 #>  4 seo services        NA             NA             1   6400 #>  5 what is a seo       NA             NA             1   5300 #>  6 seo london          NA             london         1   5000 #>  7 what is seo         NA             NA             1   4800 #>  8 seo agency          agency         NA             1   4300 #>  9 seo company         company        NA             1   4200 #> 10 seo consultant      consultancy    NA             1   3500 #> 11 seo service         NA             NA             1   3500 #> 12 seo company london  company        london         1   2500 #> 13 seo agency london   agency         london         1   2400 #> 14 seo services london NA             london         1   2400 #> 15 seo consultants     consultancy    NA             1   2300 #> 16 local seo           NA             NA             1   2200 #> 17 local seo services  NA             NA             1   2000"},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"exploring-the-results","dir":"Articles","previous_headings":"","what":"Exploring the results","title":"Recomended workflow","text":"classification, can review overall summary queries. overview values column (dimension) classification also useful.","code":"kwr |> kwr_summary() #> Distinct input queries:  21  #> Normalized queries:      19  #> Pruned queries:          17  #> Classified queries:      9  #> Unclassified queries:    8 kwr |> kwr_dimension_table(bussiness_type) #> # A tibble: 4 × 3 #>   bussiness_type     n volume #>   <chr>          <int>  <dbl> #> 1 NA                10 134300 #> 2 agency             3  13300 #> 3 company            2   6700 #> 4 consultancy        2   5800"},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"exporting-results","dir":"Articles","previous_headings":"","what":"Exporting results","title":"Recomended workflow","text":"last step presentation results use practice. phase, keywordr package yet provide direct support. However, results can easily presented exported means R language. following output datasets available.","code":""},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"classified-queries","dir":"Articles","previous_headings":"Exporting results","what":"Classified queries","title":"Recomended workflow","text":"","code":"kwr |> kwr_classified_queries() #> # A tibble: 17 × 9 #>    query_normalized   bussiness_type place n_queries volume   cpc query_original #>    <chr>              <chr>          <chr>     <int>  <dbl> <dbl> <chr>          #>  1 seo                NA             NA            1  96000    NA seo            #>  2 seo meaning        NA             NA            1   6700    NA seo meaning    #>  3 london seo agenci… agency         lond…         2   6600    NA london seo ag… #>  4 seo services       NA             NA            1   6400    NA seo services   #>  5 what is a seo      NA             NA            1   5300    NA what is a seo  #>  6 seo london         NA             lond…         1   5000    NA seo london     #>  7 what is seo        NA             NA            1   4800    NA what is seo    #>  8 seo agency         agency         NA            1   4300    NA seo agency     #>  9 seo company        company        NA            1   4200    NA seo company    #> 10 seo consultant     consultancy    NA            1   3500    NA seo consultant #> 11 seo service        NA             NA            1   3500    NA seo service    #> 12 seo company london company        lond…         1   2500    NA seo company l… #> 13 seo agency london  agency         lond…         1   2400    NA seo agency lo… #> 14 seo services lond… NA             lond…         1   2400    NA seo services … #> 15 seo consultants    consultancy    NA            1   2300    NA seo consultan… #> 16 local seo          NA             NA            1   2200    NA local seo      #> 17 local seo services NA             NA            1   2000    NA local seo ser… #> # … with 2 more variables: input <chr>, source <chr>"},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"unclassified-queries","dir":"Articles","previous_headings":"Exporting results","what":"Unclassified queries","title":"Recomended workflow","text":"","code":"kwr |> kwr_unclassified_queries() #> # A tibble: 8 × 7 #>   query_normalized   n_queries volume   cpc query_original     input source #>   <chr>                  <int>  <dbl> <dbl> <chr>              <chr> <chr>  #> 1 seo                        1  96000    NA seo                NA    NA     #> 2 seo meaning                1   6700    NA seo meaning        NA    NA     #> 3 seo services               1   6400    NA seo services       NA    NA     #> 4 what is a seo              1   5300    NA what is a seo      NA    NA     #> 5 what is seo                1   4800    NA what is seo        NA    NA     #> 6 seo service                1   3500    NA seo service        NA    NA     #> 7 local seo                  1   2200    NA local seo          NA    NA     #> 8 local seo services         1   2000    NA local seo services NA    NA"},{"path":"https://marekprokop.github.io/keywordr/articles/workflow.html","id":"removed-irrelevant-queries","dir":"Articles","previous_headings":"Exporting results","what":"Removed (irrelevant) queries","title":"Recomended workflow","text":"","code":"kwr |> kwr_removed_queries() #> # A tibble: 2 × 7 #>   query_normalized n_queries volume   cpc query_original      input source #>   <chr>                <int>  <dbl> <dbl> <chr>               <chr> <chr>  #> 1 seo ye-ji                2  28000    NA seo ye ji,seo ye-ji NA    NA     #> 2 joe seo                  1   4300    NA joe seo             NA    NA"},{"path":"https://marekprokop.github.io/keywordr/articles/yaml.html","id":"file","dir":"Articles","previous_headings":"","what":"File","title":"Removal and classification recipes","text":"highest unit structure file. can just one, can . Breaking many rules multiple files manageable makes easier multiple people collaborate project. addition, can work files time. split classification queries multiple phases, processed quickly clearly.","code":""},{"path":"https://marekprokop.github.io/keywordr/articles/yaml.html","id":"recipes","dir":"Articles","previous_headings":"","what":"Recipes","title":"Removal and classification recipes","text":"file consists list recipes. two basic groups recipes: removal classification.","code":"- [recipe] - [recipe] - [recipe]"},{"path":"https://marekprokop.github.io/keywordr/articles/yaml.html","id":"removal-recipes","dir":"Articles","previous_headings":"Recipes","what":"Removal recipes","title":"Removal and classification recipes","text":"Usually, single recipe file need remove unwanted input queries. simplest recipe removal looks like : recipe applied, removes queries match refular expression xxx. complex removal recipe looks like : applied, removes queries match regular expressions xxx yyy (), unless also match regular expressions aaa bbb ().","code":"- type: remove   rules:   - match: xxx - type: remove   rules:   - match:     - xxx     - yyy     except:     - aaa     - bbb"},{"path":"https://marekprokop.github.io/keywordr/articles/yaml.html","id":"classification-recipes","dir":"Articles","previous_headings":"Recipes","what":"Classification recipes","title":"Removal and classification recipes","text":"simpliest classification recipe looks like : says: Create column (dimension, label) named label_name. Apply regular expression aaa|bbb (means aaa bbb) every query. Fill column label_name matched part query. part query matches regular expression, leave value empty (ie. NA). Sometimes don’t want label value matched part query. instance want match shirt shirts, label value read shirt cases. use recipe: can write regular expressions efficiently: can combine methods create multiple values column (label), e.g.: can even combine multiple recipes one file like : happens, apply classification recipes queries? Let’s suppose following queries: now classify queries recipes :","code":"- type: label   name: label_name   rules:   - match:     - aaa     - bbb - type: label   name: product   values:   - value: shirt     rules:     - match:       - shirt       - shirts - type: label   name: product   values:   - value: shirt     rules:     - match: shirts? - type: label   name: product   rules:   - match:     - shoes     - trousers   values:   - value: shirt     rules:     - match: shirts?   - value: hat     rules:     - match: hats? - type: label   name: product   rules:   - match:     - shoes     - trousers   values:   - value: shirt     rules:     - match: shirts?   - value: hat     rules:     - match: hats? - type: label   name: price   rules:   - match:     - cheap     - luxury #> # A tibble: 6 × 2 #>   query         volume #>   <chr>          <dbl> #> 1 outdoor shoes     10 #> 2 cheap shoes       10 #> 3 luxury shoes      10 #> 4 white shirt       10 #> 5 blue trousers     10 #> 6 black hat         10 #> # A tibble: 6 × 5 #>   query_normalized product  price  n_queries volume #>   <chr>            <chr>    <chr>      <int>  <dbl> #> 1 black hat        hat      NA             1     10 #> 2 blue trousers    trousers NA             1     10 #> 3 cheap shoes      shoes    cheap          1     10 #> 4 luxury shoes     shoes    luxury         1     10 #> 5 outdoor shoes    shoes    NA             1     10 #> 6 white shirt      shirt    NA             1     10"},{"path":"https://marekprokop.github.io/keywordr/articles/yaml.html","id":"helper-for-recipe-creation","dir":"Articles","previous_headings":"","what":"Helper for recipe creation","title":"Removal and classification recipes","text":"fact need always edit recipe files directly. packege keywordr contains function make work easier: ˙kwr_add_pattern()˙. adds new regex pattern recipe file. instance, recreate recipes code:","code":"recipe_file <- file.path(tempdir(), \"recipes.yml\") kwr_add_pattern(   pattern = \"shoes\",    recipe_file = recipe_file,    recipe_type = \"label\",    dim_name = \"product\" ) kwr_add_pattern(   pattern = \"trousers\",    recipe_file = recipe_file,    recipe_type = \"label\",    dim_name = \"product\" ) kwr_add_pattern(   pattern = \"shirts?\",    recipe_file = recipe_file,    recipe_type = \"label\",    dim_name = \"product\",    value = \"shirt\" ) kwr_add_pattern(   pattern = \"hats?\",    recipe_file = recipe_file,    recipe_type = \"label\",    dim_name = \"product\",    value = \"hat\" ) kwr_add_pattern(   pattern = \"cheap\",    recipe_file = recipe_file,    recipe_type = \"label\",    dim_name = \"price\" ) kwr_add_pattern(   pattern = \"luxury\",    recipe_file = recipe_file,    recipe_type = \"label\",    dim_name = \"price\" ) writeLines(readLines(recipe_file)) #> - type: label #>   name: product #>   rules: #>   - match: #>     - shoes #>     - trousers #>   values: #>   - value: shirt #>     rules: #>     - match: shirts? #>   - value: hat #>     rules: #>     - match: hats? #> - type: label #>   name: price #>   rules: #>   - match: #>     - cheap #>     - luxury"},{"path":"https://marekprokop.github.io/keywordr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marek Prokop. Author, maintainer.","code":""},{"path":"https://marekprokop.github.io/keywordr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Prokop M (2022). keywordr: Research classify search engine queries R!. https://marekprokop.github.io/keywordr/, https://github.com/MarekProkop/keywordr.","code":"@Manual{,   title = {keywordr: Research and classify search engine queries in R!},   author = {Marek Prokop},   year = {2022},   note = {https://marekprokop.github.io/keywordr/, https://github.com/MarekProkop/keywordr}, }"},{"path":"https://marekprokop.github.io/keywordr/index.html","id":"the-keywordr-seo-package-for-r","dir":"","previous_headings":"","what":"Research and classify search engine queries in R!","title":"Research and classify search engine queries in R!","text":"keywordr package provides efficient user-friendly framework keyword research. results typically used optimize websites search engines, create content strategy, design information architecture websites, etc.","code":""},{"path":"https://marekprokop.github.io/keywordr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Research and classify search engine queries in R!","text":"can install development version keywordr GitHub : Note: must R version 4.1.0 package makes use native R pipe new syntax anonymous functions.","code":"# install.packages(\"devtools\") devtools::install_github(\"MarekProkop/keywordr\", build_vignettes = TRUE)"},{"path":"https://marekprokop.github.io/keywordr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Research and classify search engine queries in R!","text":"basic example shows use package:","code":""},{"path":"https://marekprokop.github.io/keywordr/index.html","id":"attache-packages","dir":"","previous_headings":"Example","what":"Attache packages","title":"Research and classify search engine queries in R!","text":"","code":"library(tidyverse) library(keywordr)"},{"path":"https://marekprokop.github.io/keywordr/index.html","id":"create-a-kwresearch-object-and-import-queries","dir":"","previous_headings":"Example","what":"Create a kwresearch object and import queries","title":"Research and classify search engine queries in R!","text":"","code":"input_data <- tribble(   ~query,             ~volume,   \"seo\",                96000,   \"seo ye-ji\",          22000,   \"seo meaning\",         6700,   \"seo services\",        6400,   \"what is a seo\",       5300,   \"seo london\",          5000,   \"what is seo\",         4800,   \"seo agency\",          4300, )  kwr <- kwresearch(input_data)"},{"path":"https://marekprokop.github.io/keywordr/index.html","id":"browse-imported-queries","dir":"","previous_headings":"Example","what":"Browse imported queries","title":"Research and classify search engine queries in R!","text":"","code":"kwr_queries(kwr) #> # A tibble: 8 × 7 #>   query_normalized n_queries volume   cpc query_original input source #>   <chr>                <int>  <dbl> <dbl> <chr>          <chr> <chr>  #> 1 seo                      1  96000    NA seo            <NA>  <NA>   #> 2 seo ye-ji                1  22000    NA seo ye-ji      <NA>  <NA>   #> 3 seo meaning              1   6700    NA seo meaning    <NA>  <NA>   #> 4 seo services             1   6400    NA seo services   <NA>  <NA>   #> 5 what is a seo            1   5300    NA what is a seo  <NA>  <NA>   #> 6 seo london               1   5000    NA seo london     <NA>  <NA>   #> 7 what is seo              1   4800    NA what is seo    <NA>  <NA>   #> 8 seo agency               1   4300    NA seo agency     <NA>  <NA>"},{"path":"https://marekprokop.github.io/keywordr/index.html","id":"prune-unwanted-queries","dir":"","previous_headings":"Example","what":"Prune unwanted queries","title":"Research and classify search engine queries in R!","text":"","code":"recipe_file <- file.path(tempdir(), \"recipes.yml\")  kwr_add_pattern(\"ye-ji\", recipe_file, recipe_type = \"remove\")  kwr <- kwr |>    kwr_prune(recipe_file) #> Removing queries... #> Removed 1 queries out of 8. Duration: 0.006s"},{"path":"https://marekprokop.github.io/keywordr/index.html","id":"check-pruned-queries","dir":"","previous_headings":"Example","what":"Check pruned queries","title":"Research and classify search engine queries in R!","text":"","code":"kwr_queries(kwr) #> # A tibble: 7 × 7 #>   query_normalized n_queries volume   cpc query_original input source #>   <chr>                <int>  <dbl> <dbl> <chr>          <chr> <chr>  #> 1 seo                      1  96000    NA seo            <NA>  <NA>   #> 2 seo meaning              1   6700    NA seo meaning    <NA>  <NA>   #> 3 seo services             1   6400    NA seo services   <NA>  <NA>   #> 4 what is a seo            1   5300    NA what is a seo  <NA>  <NA>   #> 5 seo london               1   5000    NA seo london     <NA>  <NA>   #> 6 what is seo              1   4800    NA what is seo    <NA>  <NA>   #> 7 seo agency               1   4300    NA seo agency     <NA>  <NA>"},{"path":"https://marekprokop.github.io/keywordr/index.html","id":"explore-queries","dir":"","previous_headings":"Example","what":"Explore queries","title":"Research and classify search engine queries in R!","text":"","code":"kwr |> kwr_ngrams() #> # A tibble: 8 × 3 #>   token             n volume #>   <chr>         <int>  <dbl> #> 1 seo               7 128500 #> 2 what is           2  10100 #> 3 seo meaning       1   6700 #> 4 seo services      1   6400 #> 5 what is a seo     1   5300 #> 6 seo london        1   5000 #> 7 what is seo       1   4800 #> 8 seo agency        1   4300"},{"path":"https://marekprokop.github.io/keywordr/index.html","id":"classify-queries","dir":"","previous_headings":"Example","what":"Classify queries","title":"Research and classify search engine queries in R!","text":"","code":"kwr_add_pattern(   pattern = \"agenc\",   recipe_file = recipe_file,   recipe_type = \"label\",   dim_name = \"bussiness_type\",   value = \"agency\" ) kwr_add_pattern(   pattern = \"meaning\",   recipe_file = recipe_file,   recipe_type = \"label\",   dim_name = \"info\" ) kwr_add_pattern(   pattern = \"what is\",   recipe_file = recipe_file,   recipe_type = \"label\",   dim_name = \"info\" )  kwr <- kwr |>    kwr_classify(recipe_file) #> Label:bussiness_type #>   Value: agency #> Label:info"},{"path":"https://marekprokop.github.io/keywordr/index.html","id":"check-classified-queries","dir":"","previous_headings":"Example","what":"Check classified queries","title":"Research and classify search engine queries in R!","text":"Please see vignette(\"workflow\") detailed example.","code":"kwr_queries(kwr) |>    select(1:5) #> # A tibble: 7 × 5 #>   query_normalized bussiness_type info    n_queries volume #>   <chr>            <chr>          <chr>       <int>  <dbl> #> 1 seo              <NA>           <NA>            1  96000 #> 2 seo meaning      <NA>           meaning         1   6700 #> 3 seo services     <NA>           <NA>            1   6400 #> 4 what is a seo    <NA>           what is         1   5300 #> 5 seo london       <NA>           <NA>            1   5000 #> 6 what is seo      <NA>           what is         1   4800 #> 7 seo agency       agency         <NA>            1   4300"},{"path":"https://marekprokop.github.io/keywordr/reference/accentize_queries.html","id":null,"dir":"Reference","previous_headings":"","what":"Tries to add accents (´ˇ¨ etc.) where they should be — accentize_queries","title":"Tries to add accents (´ˇ¨ etc.) where they should be — accentize_queries","text":"Tries add accents (´ˇ¨ etc.) ","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/accentize_queries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tries to add accents (´ˇ¨ etc.) where they should be — accentize_queries","text":"","code":"accentize_queries(x, vol)"},{"path":"https://marekprokop.github.io/keywordr/reference/accentize_queries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tries to add accents (´ˇ¨ etc.) where they should be — accentize_queries","text":"x Character vector queries. vol Character vector search volumes corresponding queries x.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/accentize_queries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tries to add accents (´ˇ¨ etc.) where they should be — accentize_queries","text":"Character vector queries x, accents added .","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/extract_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts a regex pattern from a character vector (vectorized) — extract_pattern","title":"Extracts a regex pattern from a character vector (vectorized) — extract_pattern","text":"Extracts regex pattern character vector (vectorized)","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/extract_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts a regex pattern from a character vector (vectorized) — extract_pattern","text":"","code":"extract_pattern(x, pattern)"},{"path":"https://marekprokop.github.io/keywordr/reference/extract_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts a regex pattern from a character vector (vectorized) — extract_pattern","text":"x character vector extract pattern . pattern regex pattern. contains capture groups, extracted.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/extract_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts a regex pattern from a character vector (vectorized) — extract_pattern","text":"character vector lenght x.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/import_mm_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports a single MarketingMiner CSV file — import_mm_file","title":"Imports a single MarketingMiner CSV file — import_mm_file","text":"Imports single MarketingMiner CSV file","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/import_mm_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports a single MarketingMiner CSV file — import_mm_file","text":"","code":"import_mm_file(path, quiet = FALSE)"},{"path":"https://marekprokop.github.io/keywordr/reference/import_mm_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports a single MarketingMiner CSV file — import_mm_file","text":"path Full path name imported file. quiet TRUE prints messgaes.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/import_mm_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports a single MarketingMiner CSV file — import_mm_file","text":"tibble columns: query, volume, cpc, input, source. Rows just copied CSV file without deduplication modification.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/join_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Deduplicates and joins multiple label values — join_labels","title":"Deduplicates and joins multiple label values — join_labels","text":"Deduplicates joins multiple label values","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/join_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deduplicates and joins multiple label values — join_labels","text":"","code":"join_labels(x, y, sep = \",\")"},{"path":"https://marekprokop.github.io/keywordr/reference/join_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deduplicates and joins multiple label values — join_labels","text":"x character vector. y character vector. sep character vector length 1.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/join_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deduplicates and joins multiple label values — join_labels","text":"Character vector length x. Unique label values x y joined together.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/join_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Deduplicates regex patterns and joins them by ","title":"Deduplicates regex patterns and joins them by ","text":"Deduplicates regex patterns joins \"|\"","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/join_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deduplicates regex patterns and joins them by ","text":"","code":"join_patterns(patterns)"},{"path":"https://marekprokop.github.io/keywordr/reference/join_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deduplicates regex patterns and joins them by ","text":"patterns character vector regex patterns.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/join_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deduplicates regex patterns and joins them by ","text":"character vector length 1.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/keywordr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"keywordr: Research and classify search engine queries in R! — keywordr-package","title":"keywordr: Research and classify search engine queries in R! — keywordr-package","text":"framework keyword research R.","code":""},{"path":[]},{"path":"https://marekprokop.github.io/keywordr/reference/keywordr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"keywordr: Research and classify search engine queries in R! — keywordr-package","text":"Maintainer: Marek Prokop mprokop@prokopsw.cz","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_add_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a new regex pattern to a pruning or classification recipe — kwr_add_pattern","title":"Adds a new regex pattern to a pruning or classification recipe — kwr_add_pattern","text":"recipe_file exists, loaded pattern inserted . recipe_file exist, created.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_add_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a new regex pattern to a pruning or classification recipe — kwr_add_pattern","text":"","code":"kwr_add_pattern(   pattern = NULL,   recipe_file = NULL,   recipe_type = NULL,   dim_name = NULL,   value = NULL )"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_add_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a new regex pattern to a pruning or classification recipe — kwr_add_pattern","text":"pattern regular expression. recipe_file YAML file, pattern saved . recipe_type Recipe type. One : 'remove', 'include', 'tag' 'label'. dim_name Dimension name recipe types 'tag' 'label'. value Optional value recipe types 'tag' 'label'.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_add_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds a new regex pattern to a pruning or classification recipe — kwr_add_pattern","text":"Nothing.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_add_pattern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds a new regex pattern to a pruning or classification recipe — kwr_add_pattern","text":"","code":"recipe_file <- file.path(tempdir(), \"my-recipes.yml\")  # Pruning recipe:  kwr_add_pattern(   pattern = \"xyz\",   recipe_file = recipe_file,   recipe_type = \"remove\" )  # Label recipe:  kwr_add_pattern(   pattern = \"xyz\",   recipe_file = recipe_file,   recipe_type = \"label\",   dim_name = \"my_label\" )  file.remove(recipe_file) #> [1] TRUE"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_build_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates regular expression from a single string — kwr_build_regex","title":"Creates regular expression from a single string — kwr_build_regex","text":"function following two things:","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_build_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates regular expression from a single string — kwr_build_regex","text":"","code":"kwr_build_regex(x, and = NULL)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_build_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates regular expression from a single string — kwr_build_regex","text":"x Input string. Optional string matched well.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_build_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates regular expression from a single string — kwr_build_regex","text":"Regular expression.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_build_regex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates regular expression from a single string — kwr_build_regex","text":"Accented letters string replaced character class containing accented letter letter without accent. argument provided, reulting regex match strings order.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_build_regex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates regular expression from a single string — kwr_build_regex","text":"","code":"kwr_build_regex(\"vajíčko\") #> [1] \"vaj[íi][čc]ko\"  # \"vaj[íi][čc]ko\"  kwr_build_regex(x = \"abc\", and = \"xyz\") #> [1] \"xyz.+abc|abc.+xyz\"  # \"xyz.+abc|abc.+xyz\""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_classified_queries.html","id":null,"dir":"Reference","previous_headings":"","what":"Outputs classified queries — kwr_classified_queries","title":"Outputs classified queries — kwr_classified_queries","text":"Outputs classified queries","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_classified_queries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outputs classified queries — kwr_classified_queries","text":"","code":"kwr_classified_queries(kwr, q = NULL)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_classified_queries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outputs classified queries — kwr_classified_queries","text":"kwr kwresearch object. q regular expression filter output data frame.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_classified_queries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outputs classified queries — kwr_classified_queries","text":"tibble.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_classified_queries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Outputs classified queries — kwr_classified_queries","text":"","code":"queries <- data.frame(   query = c(\"seo\", \"keyword research\"),   volume = c(1000, 500) ) kwr <- kwresearch(queries) if (FALSE) { kwr |>   kwr_classify(\"C:/Dev/R/Public/keyworder/tests/test-data/recipes.yml\") |>   kwr_classified_queries() }"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_classify.html","id":null,"dir":"Reference","previous_headings":"","what":"Classifies queries based on recipes — kwr_classify","title":"Classifies queries based on recipes — kwr_classify","text":"Classifies queries based recipes","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_classify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classifies queries based on recipes — kwr_classify","text":"","code":"kwr_classify(kwr, recipe_file = NULL, quiet = FALSE)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_classify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classifies queries based on recipes — kwr_classify","text":"kwr kwr object containg queries classified, classification recipes. recipe_file path recipe file YAML format. quiet TRUE prints messgaes.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_classify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classifies queries based on recipes — kwr_classify","text":"kwr object queries classified. Existing classification preserved updated, new added.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_classify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classifies queries based on recipes — kwr_classify","text":"","code":"if (FALSE) { kwr <- kwr |> kwr_classify() }"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_clean_queries.html","id":null,"dir":"Reference","previous_headings":"","what":"Outputs cleaned (normalized and accentized) queries — kwr_clean_queries","title":"Outputs cleaned (normalized and accentized) queries — kwr_clean_queries","text":"Outputs cleaned (normalized accentized) queries","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_clean_queries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outputs cleaned (normalized and accentized) queries — kwr_clean_queries","text":"","code":"kwr_clean_queries(kwr, q = NULL)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_clean_queries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outputs cleaned (normalized and accentized) queries — kwr_clean_queries","text":"kwr kwresearch object. q regular expression filter output data frame.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_clean_queries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outputs cleaned (normalized and accentized) queries — kwr_clean_queries","text":"tibble.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_clean_queries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Outputs cleaned (normalized and accentized) queries — kwr_clean_queries","text":"","code":"queries <- data.frame(   query = c(\"seo\", \"keyword research\"),   volume = c(1000, 500) ) kwr <- kwresearch(queries) kwr |> kwr_clean_queries() #> # A tibble: 2 × 7 #>   query_normalized n_queries volume   cpc query_original   input source #>   <chr>                <int>  <dbl> <dbl> <chr>            <chr> <chr>  #> 1 seo                      1   1000    NA seo              NA    NA     #> 2 keyword research         1    500    NA keyword research NA    NA"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_collocations.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds collocations, i.e. multiword phrases that are more likely than their\nsingle words — kwr_collocations","title":"Finds collocations, i.e. multiword phrases that are more likely than their\nsingle words — kwr_collocations","text":"Finds collocations, .e. multiword phrases likely single words","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_collocations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds collocations, i.e. multiword phrases that are more likely than their\nsingle words — kwr_collocations","text":"","code":"kwr_collocations(x, min_volume_prop = 0.5, min_n = 2, quanteda = TRUE)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_collocations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds collocations, i.e. multiword phrases that are more likely than their\nsingle words — kwr_collocations","text":"x kwresearch object, queries collocations calculated , data frame queries volume. min_volume_prop Minimum proportion. min_n Minimum number queries. n-grams least number queries included. quanteda TRUE, use 'quanteda' package, recommended.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_collocations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds collocations, i.e. multiword phrases that are more likely than their\nsingle words — kwr_collocations","text":"tibble n-grams basic stats (nuber queries sum search volumes). n-grams orderd descendingly number queries search volume. Use dplyr::arrange change order.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_dimension_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets names of all dimensions (flags an labels) — kwr_dimension_names","title":"Gets names of all dimensions (flags an labels) — kwr_dimension_names","text":"Gets names dimensions (flags labels)","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_dimension_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets names of all dimensions (flags an labels) — kwr_dimension_names","text":"","code":"kwr_dimension_names(df)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_dimension_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets names of all dimensions (flags an labels) — kwr_dimension_names","text":"df data frame get dimension names .","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_dimension_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets names of all dimensions (flags an labels) — kwr_dimension_names","text":"vector names.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_dimension_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Outputs frequency table of a given dimension (label or flag) — kwr_dimension_table","title":"Outputs frequency table of a given dimension (label or flag) — kwr_dimension_table","text":"Outputs frequency table given dimension (label flag)","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_dimension_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outputs frequency table of a given dimension (label or flag) — kwr_dimension_table","text":"","code":"kwr_dimension_table(x, column)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_dimension_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outputs frequency table of a given dimension (label or flag) — kwr_dimension_table","text":"x kwresearch object, whose queries already classified, data frame classified queries (e.g. result kwr_classified_queries function). column dimension (column) name, string.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_dimension_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outputs frequency table of a given dimension (label or flag) — kwr_dimension_table","text":"tibble.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports queries to a kwresearch object — kwr_import","title":"Imports queries to a kwresearch object — kwr_import","text":"Imports queries kwresearch object","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports queries to a kwresearch object — kwr_import","text":"","code":"kwr_import(kwr, queries)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports queries to a kwresearch object — kwr_import","text":"kwr empty kwresearch object. queries data frame least one column query possibly additional colums volume, cpc, imput source.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports queries to a kwresearch object — kwr_import","text":"provided kwresearch object imported queries.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports queries to a kwresearch object — kwr_import","text":"","code":"kwr <- kwresearch()  queries <- data.frame(   query = c(\"seo\", \"keyword research\"),   volume = c(1000, 500) ) kwr <- kwr_import(kwr, queries)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_import_mm.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports MarketingMiner CSV file(s) to an empty kwresearch object — kwr_import_mm","title":"Imports MarketingMiner CSV file(s) to an empty kwresearch object — kwr_import_mm","text":"Imports MarketingMiner CSV file(s) empty kwresearch object","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_import_mm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports MarketingMiner CSV file(s) to an empty kwresearch object — kwr_import_mm","text":"","code":"kwr_import_mm(kwr, path, quiet = FALSE)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_import_mm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports MarketingMiner CSV file(s) to an empty kwresearch object — kwr_import_mm","text":"kwr empty kwresearch object. path Either single character string containing path folder, character vector, item path CSV file. quiet TRUE prints messgaes.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_import_mm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports MarketingMiner CSV file(s) to an empty kwresearch object — kwr_import_mm","text":"provided kwresearch object imported queries.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_import_mm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports MarketingMiner CSV file(s) to an empty kwresearch object — kwr_import_mm","text":"","code":"# Import 2 files: if (FALSE) { kwr <- kwresearch() |>   kwr_import_mm(c(\"f1.csv\", \"f2.csv\")) }  # Import all CSV files in th data-raw folder if (FALSE) { kwr <- kwresearch() |>   kwr_import_mm(\"data-raw\") }"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_long_queries.html","id":null,"dir":"Reference","previous_headings":"","what":"Outputs queries longer than a specific number of characters — kwr_long_queries","title":"Outputs queries longer than a specific number of characters — kwr_long_queries","text":"Outputs queries longer specific number characters","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_long_queries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outputs queries longer than a specific number of characters — kwr_long_queries","text":"","code":"kwr_long_queries(kwr, longer_than = 60)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_long_queries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outputs queries longer than a specific number of characters — kwr_long_queries","text":"kwr kwresearch object. longer_than number.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_long_queries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outputs queries longer than a specific number of characters — kwr_long_queries","text":"output kwr_queries filtered queries longer longer_than characters.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_ngrams.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates n-grams from queries — kwr_ngrams","title":"Generates n-grams from queries — kwr_ngrams","text":"Generates n-grams queries","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_ngrams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates n-grams from queries — kwr_ngrams","text":"","code":"kwr_ngrams(   x,   max_words = 4,   min_words = 1,   min_n = 1,   min_volume = 0,   remove_nested = TRUE )"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_ngrams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates n-grams from queries — kwr_ngrams","text":"x kwresearch object, queries n-grams calculated , data frame queries volume. max_words Maximum number words n-grams. min_words Minimum number words n-grams. min_n Minimum number queries. n-grams least number queries included. min_volume Minimum search volume per n-gram. n-grams least volume included. remove_nested TRUE, n-grams fully contained another n-gram (number queries must ) filtered result. May slower.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_ngrams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates n-grams from queries — kwr_ngrams","text":"tibble n-grams basic stats (nuber queries sum search volumes). n-grams orderd descendingly number queries search volume. Use dplyr::arrange change order. stop words set kwr_use_stopwords, removed unigrams.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_ngrams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates n-grams from queries — kwr_ngrams","text":"","code":"queries <- data.frame(   query = c(\"seo\", \"keyword research\"),   volume = c(1000, 500) ) kwr <- kwresearch(queries) kwr |> kwr_ngrams() #> # A tibble: 2 × 3 #>   token                n volume #>   <chr>            <int>  <dbl> #> 1 seo                  1   1000 #> 2 keyword research     1    500"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_prune.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes unwanted queries according to YAML recipes — kwr_prune","title":"Removes unwanted queries according to YAML recipes — kwr_prune","text":"status kwresearch object 'data', changes 'pruned' pruned data created clean data. pruned data already exists (ie. status = 'pruned') pruned data pruned .","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_prune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes unwanted queries according to YAML recipes — kwr_prune","text":"","code":"kwr_prune(kwr, recipe_file, quiet = FALSE)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_prune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes unwanted queries according to YAML recipes — kwr_prune","text":"kwr kwresearch object pruned. recipe_file path recipe file YAML format. quiet TRUE prints messgaes.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_prune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes unwanted queries according to YAML recipes — kwr_prune","text":"kwresearch object pruned data status = 'pruned'.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_prune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes unwanted queries according to YAML recipes — kwr_prune","text":"","code":"if (FALSE) { kwr <- kwr |> kwr_prune(\"prune.yml\") }"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_prune_long_queries.html","id":null,"dir":"Reference","previous_headings":"","what":"From pruned data removes queries longer than a specific number of characters — kwr_prune_long_queries","title":"From pruned data removes queries longer than a specific number of characters — kwr_prune_long_queries","text":"pruned data removes queries longer specific number characters","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_prune_long_queries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From pruned data removes queries longer than a specific number of characters — kwr_prune_long_queries","text":"","code":"kwr_prune_long_queries(kwr, longer_than = 60)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_prune_long_queries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"From pruned data removes queries longer than a specific number of characters — kwr_prune_long_queries","text":"kwr kwresearch object. longer_than number.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_prune_long_queries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From pruned data removes queries longer than a specific number of characters — kwr_prune_long_queries","text":"kwresearch object pruned data status = 'pruned'.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_pruned_queries.html","id":null,"dir":"Reference","previous_headings":"","what":"Outputs pruned queries — kwr_pruned_queries","title":"Outputs pruned queries — kwr_pruned_queries","text":"Outputs pruned queries","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_pruned_queries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outputs pruned queries — kwr_pruned_queries","text":"","code":"kwr_pruned_queries(kwr, q = NULL)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_pruned_queries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outputs pruned queries — kwr_pruned_queries","text":"kwr kwresearch object. q regular expression filter output data frame.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_pruned_queries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outputs pruned queries — kwr_pruned_queries","text":"tibble.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_queries.html","id":null,"dir":"Reference","previous_headings":"","what":"Outputs the most processed queries — kwr_queries","title":"Outputs the most processed queries — kwr_queries","text":"Outputs processed queries","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_queries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outputs the most processed queries — kwr_queries","text":"","code":"kwr_queries(kwr, q = NULL)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_queries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outputs the most processed queries — kwr_queries","text":"kwr kwresearch object. q regular expression filter output data frame.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_queries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outputs the most processed queries — kwr_queries","text":"tibble queries.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_remove_stopwords.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes stopwords from a dataset, e.g. n-grams — kwr_remove_stopwords","title":"Removes stopwords from a dataset, e.g. n-grams — kwr_remove_stopwords","text":"Removes stopwords dataset, e.g. n-grams","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_remove_stopwords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes stopwords from a dataset, e.g. n-grams — kwr_remove_stopwords","text":"","code":"kwr_remove_stopwords(df, stopwords = kwr_stopwords())"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_remove_stopwords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes stopwords from a dataset, e.g. n-grams — kwr_remove_stopwords","text":"df data frame words n-grams 1st column. stopwords vector words (n-grams) removed. can output kwr_stopwords function.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_remove_stopwords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes stopwords from a dataset, e.g. n-grams — kwr_remove_stopwords","text":"data set df rows matching stopwords removed.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_removed_queries.html","id":null,"dir":"Reference","previous_headings":"","what":"Outputs queries removed by kwr_prune — kwr_removed_queries","title":"Outputs queries removed by kwr_prune — kwr_removed_queries","text":"Outputs queries removed kwr_prune","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_removed_queries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outputs queries removed by kwr_prune — kwr_removed_queries","text":"","code":"kwr_removed_queries(kwr, q = NULL)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_removed_queries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outputs queries removed by kwr_prune — kwr_removed_queries","text":"kwr kwresearch object. q regular expression filter output data frame.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_removed_queries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outputs queries removed by kwr_prune — kwr_removed_queries","text":"tibble queries removed kwr_prune.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_source_queries.html","id":null,"dir":"Reference","previous_headings":"","what":"Outputs raw, source queries — kwr_source_queries","title":"Outputs raw, source queries — kwr_source_queries","text":"Outputs raw, source queries","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_source_queries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outputs raw, source queries — kwr_source_queries","text":"","code":"kwr_source_queries(kwr, q = NULL)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_source_queries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outputs raw, source queries — kwr_source_queries","text":"kwr kwresearch object. q regular expression filter output data frame.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_source_queries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outputs raw, source queries — kwr_source_queries","text":"tibble.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_source_queries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Outputs raw, source queries — kwr_source_queries","text":"","code":"queries <- data.frame(   query = c(\"seo\", \"keyword research\"),   volume = c(1000, 500) ) kwr <- kwresearch(queries) kwr |> kwr_source_queries() #> # A tibble: 2 × 5 #>   query            input source volume   cpc #>   <chr>            <chr> <chr>   <dbl> <dbl> #> 1 keyword research NA    NA        500    NA #> 2 seo              NA    NA       1000    NA"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_stopwords.html","id":null,"dir":"Reference","previous_headings":"","what":"Return stopwords as a character vector — kwr_stopwords","title":"Return stopwords as a character vector — kwr_stopwords","text":"Return stopwords character vector","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_stopwords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return stopwords as a character vector — kwr_stopwords","text":"","code":"kwr_stopwords(lang = \"cs\")"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_stopwords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return stopwords as a character vector — kwr_stopwords","text":"lang Language abbreviation. Czech (cs) implemented now.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_stopwords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return stopwords as a character vector — kwr_stopwords","text":"Character vector stopwords.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_subqueries.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates n-grams from queries and filter only those that match any existing\nquery — kwr_subqueries","title":"Generates n-grams from queries and filter only those that match any existing\nquery — kwr_subqueries","text":"words, lists queries contained queries.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_subqueries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates n-grams from queries and filter only those that match any existing\nquery — kwr_subqueries","text":"","code":"kwr_subqueries(x, max_words = 5, min_words = 1, min_n = 1, min_volume = 0)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_subqueries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates n-grams from queries and filter only those that match any existing\nquery — kwr_subqueries","text":"x kwresearch object, queries n-grams calculated , data frame queries volume. max_words Maximum number words n-grams. min_words Minimum number words n-grams. min_n Minimum number queries. n-grams least number queries included. min_volume Minimum search volume per n-gram. n-grams least volume included.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_subqueries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates n-grams from queries and filter only those that match any existing\nquery — kwr_subqueries","text":"tibble n-grams basic stats (nuber queries sum search volumes). n-grams orderd descendingly number queries search volume. Use dplyr::arrange change order.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Shows number of queries in all phases of processing — kwr_summary","title":"Shows number of queries in all phases of processing — kwr_summary","text":"Shows number queries phases processing","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shows number of queries in all phases of processing — kwr_summary","text":"","code":"kwr_summary(kwr)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shows number of queries in all phases of processing — kwr_summary","text":"kwr kwresearch object.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shows number of queries in all phases of processing — kwr_summary","text":"Non.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_test_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore a regex pattern applied on queries — kwr_test_regex","title":"Explore a regex pattern applied on queries — kwr_test_regex","text":"Explore regex pattern applied queries","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_test_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore a regex pattern applied on queries — kwr_test_regex","text":"","code":"kwr_test_regex(   kwr,   pattern,   and = NULL,   except = NULL,   stopwords = kwr_stopwords() )"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_test_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore a regex pattern applied on queries — kwr_test_regex","text":"kwr kwresearch object. pattern single regular experession. vector regular expressions. one, treated . except vector regular expressions. one, treated . stopwords vector stopwords remove n-grams.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_test_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explore a regex pattern applied on queries — kwr_test_regex","text":"list data frames.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_unclassified_queries.html","id":null,"dir":"Reference","previous_headings":"","what":"List queries that are not classified in all dimension — kwr_unclassified_queries","title":"List queries that are not classified in all dimension — kwr_unclassified_queries","text":"List queries classified dimension","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_unclassified_queries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List queries that are not classified in all dimension — kwr_unclassified_queries","text":"","code":"kwr_unclassified_queries(kwr, label = NULL, q = NULL)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_unclassified_queries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List queries that are not classified in all dimension — kwr_unclassified_queries","text":"kwr kwresearch object. label optional dimension names character vector. specified, classification dimensions considered. q regular expression filter output data frame.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_unclassified_queries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List queries that are not classified in all dimension — kwr_unclassified_queries","text":"tibble queries.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_use_stopwords.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a stopword list to use with n-gram functions — kwr_use_stopwords","title":"Set a stopword list to use with n-gram functions — kwr_use_stopwords","text":"Set stopword list use n-gram functions","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_use_stopwords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a stopword list to use with n-gram functions — kwr_use_stopwords","text":"","code":"kwr_use_stopwords(kwr, stopwords = NULL)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_use_stopwords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a stopword list to use with n-gram functions — kwr_use_stopwords","text":"kwr kwresearch object. stopwords Stopwords character vector. can use kwr_stopwords() function Czech stopwords. words removed unigram listings. NULL (default), stopwords used.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwr_use_stopwords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a stopword list to use with n-gram functions — kwr_use_stopwords","text":"kwresearch object stopwords set.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwresearch.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an object of the kwresearch class — kwresearch","title":"Creates an object of the kwresearch class — kwresearch","text":"object kwresearch class home keyword research. can import datasets , research queries, clasify export final keyword analysis.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwresearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an object of the kwresearch class — kwresearch","text":"","code":"kwresearch(queries = NULL, accentize = TRUE, normalize = TRUE)"},{"path":"https://marekprokop.github.io/keywordr/reference/kwresearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an object of the kwresearch class — kwresearch","text":"queries Queries import data frame least two colums: query (string) volume (numeric). Optionally data frame can contain three additional columns: cpc (double), input (char) source (char). provide argument, can import queries later kwr_import kwr_import_mm. accentize import functions tries add correct accents (diakritic marks) queries without . normalize import funkctions tries unite queries, differ order words.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwresearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an object of the kwresearch class — kwresearch","text":"object kwresearch class.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/kwresearch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates an object of the kwresearch class — kwresearch","text":"","code":"# create an empty object  kwr <- kwresearch()  # create an object and import queries  queries <- data.frame(   query = c(\"seo\", \"keyword research\"),   volume = c(1000, 500) ) kwr <- kwresearch(queries)"},{"path":"https://marekprokop.github.io/keywordr/reference/process_prune_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Processes a single pruning recipe — process_prune_recipe","title":"Processes a single pruning recipe — process_prune_recipe","text":"Processes single pruning recipe","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/process_prune_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processes a single pruning recipe — process_prune_recipe","text":"","code":"process_prune_recipe(df, recipe)"},{"path":"https://marekprokop.github.io/keywordr/reference/process_prune_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Processes a single pruning recipe — process_prune_recipe","text":"df data frame kwr object (either clean_data, pruned_data). recipe single pruning recipe (type 'remove').","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/process_prune_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Processes a single pruning recipe — process_prune_recipe","text":"data frame pruned queries.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/process_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Processes a single recipe — process_recipe","title":"Processes a single recipe — process_recipe","text":"Processes single recipe","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/process_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processes a single recipe — process_recipe","text":"","code":"process_recipe(df, recipe, quiet = FALSE)"},{"path":"https://marekprokop.github.io/keywordr/reference/process_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Processes a single recipe — process_recipe","text":"df data frame kwr object (either clean_data, classified_data). recipe single classification recipe. quiet TRUE prints messgaes.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/process_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Processes a single recipe — process_recipe","text":"data frame updated classification.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/process_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Processes a single value of a recipe of the type label — process_value","title":"Processes a single value of a recipe of the type label — process_value","text":"Processes single value recipe type label","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/process_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processes a single value of a recipe of the type label — process_value","text":"","code":"process_value(df, value, name, quiet = FALSE)"},{"path":"https://marekprokop.github.io/keywordr/reference/process_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Processes a single value of a recipe of the type label — process_value","text":"df data frame kwr object (either clean_data, classified_data). value label value (character). name label name (character). quiet TRUE prints messgaes.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/process_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Processes a single value of a recipe of the type label — process_value","text":"data frame updated classification.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/read_recipes.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads classification recipes from a YAML file — read_recipes","title":"Reads classification recipes from a YAML file — read_recipes","text":"Reads classification recipes YAML file","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/read_recipes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads classification recipes from a YAML file — read_recipes","text":"","code":"read_recipes(path)"},{"path":"https://marekprokop.github.io/keywordr/reference/read_recipes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads classification recipes from a YAML file — read_recipes","text":"path Path YAML file.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/read_recipes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads classification recipes from a YAML file — read_recipes","text":"Classification recipes (list).","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/set_flag.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets a classification flag (logical value) — set_flag","title":"Sets a classification flag (logical value) — set_flag","text":"Sets classification flag (logical value)","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/set_flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets a classification flag (logical value) — set_flag","text":"","code":"set_flag(df, name, pattern, negate = FALSE)"},{"path":"https://marekprokop.github.io/keywordr/reference/set_flag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets a classification flag (logical value) — set_flag","text":"df data frame kwr object (either clean_data, classified_data). name name flag. pattern regex pattern (character vector length 1). negate TRUE, queries match pattern flagged TRUE.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/set_flag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets a classification flag (logical value) — set_flag","text":"data frame flag updated.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/set_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets a classification label (character) — set_label","title":"Sets a classification label (character) — set_label","text":"Sets classification label (character)","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/set_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets a classification label (character) — set_label","text":"","code":"set_label(df, name, pattern, value = NULL, exclude = NULL)"},{"path":"https://marekprokop.github.io/keywordr/reference/set_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets a classification label (character) — set_label","text":"df data frame kwr object (either clean_data, classified_data). name name label. pattern regex pattern (character vector length 1). label set matched queries . value optional value label (character). exclude regex pattern (character vector lenth 1). label never set matched queries.","code":""},{"path":"https://marekprokop.github.io/keywordr/reference/set_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets a classification label (character) — set_label","text":"data frame label updated.","code":""}]
